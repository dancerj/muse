#title 東京エリアDebian勉強会 発表資料更新/提出方法

 本ドキュメントは、Debian Jessieを用いて東京エリアDebian勉強会資料を更新/提出する方法となります。また、紹介されるgitのリポジトリに対してコミット権を持っていない人を対象に記載しております。すでにコミット権をお持ちの方は直接コミット出来ますし、慣れているかと思いますので、git pushなど、うまいことやって下さい。

* 更新方法

** 0.  Git と Latex の設定をします。

*** 課題作成に必要なパッケージを導入します。

<example>
# apt-get install git make lv \
texlive-latex-extra \
texlive-lang-japanese latex-beamer poppler-data \
evince
</example>

*** フォントマップの更新を行います。

<example>
# updmap-setup-kanji-sys ipaex
</example>

※なお、udpmap-setup-kanji-sysがNot Foundになるようでしたら、一旦無視にて。

*** gitを設定します。

課題を作成するユーザに戻り、gitにメールアドレスや名前を設定します。

<example>
$ git config --global user.email foo@example.com
$ git config --global user.name "Tarou Debian"
</example>

** 1. 勉強会資料のリポジトリを持ってない人は、git clone コマンドを使ってコピーします。

(既に持っている人は2. から読んでください。)
<example>
$ git clone git://git.debian.org/git/tokyodebian/monthly-report.git
Initialized empty Git repository in /tmp/monthly-report/.git/
remote: Counting objects: 2100, done.
remote: Compressing objects: 100% (910/910), done.
......
Resolving deltas: 100% (1428/1428), done.
</example>

** 2. ディレクトリに移動し、取得したファイルをビルドします。
<example>
$ cd monthly-report
$ cp -p git-pre-commit.sh .git/hooks/pre-commit
$ make
</example>
ビルドが終了すると100個以上のpdfファイルが作成されます。

** 3. 現在チェックアウトしているローカルブランチを確認します。
<example>
$ git branch
* 201511
  master
</example>
もし、master に前にアスタリスク( * )がついていない場合、masterローカルブランチをチェックアウトします。
<example>
$ git checkout master
</example>

再度、masterローカルブランチをチェックアウトしているか確認します。
<example>
$ git branch
  201511
* master
</example>

** 4. リモートリポジトリからリポジトリ情報を取得します。
<example>
$ git pull
</example>

** 5. 発表資料を作成する年月(2015年12月の場合は201512) のローカルブランチを作成します。
<example>
$ git branch 201512
</example>

** 6. 作成したローカルブランチをチェックアウトします。
<example>
$ git checkout 201512
Switched to branch '201512'
</example>

** 7. 発表予定の資料に発表内容を記載します。
資料はdebianmeetingresume<YYYYMM>.tex(事前資料）、debianmeetingresume<YYYYMM>-presentation.tex(当日プレゼン用資料）となります。
利用するエディタはお好きなものをどうぞ。また、画像はimage<YYYYMM>/以下に置いて下さい。

<example>
$ vi debianmeetingresume201512.tex
$ git add image201512/foo.png (画像を登録などあったら）
</example>

image<YYYYMM>/以下のファイルはMakefileの依存対象となっていないため、
対応するdebianmeetingresume<YYYYMM>.texの更新日付など変更して再コンパイルしてください。

<example>
$ touch debianmeetingresume201512.tex
$ make
</example>

** 8. 発表資料を書いたら、変更をローカルブランチにコミットします。
<example>
$ git commit -m "Add nozzy article" -a
</example>

** 9. 変更をパッチで出力します。
<example>
$ git format-patch -o /tmp HEAD~
/tmp/0001-Add-nozzy-article.patch
</example>

/tmp/0001-Add-nozzy-article.patch がパッチです。

** 10. パッチをdebian-devel@debian.or.jpメーリングリストに投稿します。

真のgit使いは git send-email コマンドを使いますが、各々が使っている
MUA を使って送るのがいいでしょう。

** 11 . メーリングリストに投稿できたら、masterローカルブランチをチェックアウトします。

<example>
$ git checkout master
Switched to branch 'master'
</example>

